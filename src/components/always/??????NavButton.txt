// import { motion } from "framer-motion";
import React from "react";
import { Motion, spring, presets } from "react-motion";
// import { motion } from "framer-motion";
// import Pages from "./Pages";
import { NavMenu } from "./NavMenu";

export class NavButton extends React.Component<{}, { isToggleOpen: boolean }> {
  constructor(props: any) {
    super(props)
    this.state = {
      isToggleOpen: false
    }
  }

  handleClick() {
    this.setState({ isToggleOpen: !this.state.isToggleOpen })
  }

  // componentWillUpdate() {
  //   console.log("componentWillUpdate")
  // }
  // componentDidUpdate() {
  //   console.log("componentDidUpdate")
  // }
  // componentWillUnmount() {
  //   console.log("componentWillUnmount")
  // }

  render() {

    const style = {
      overflow: 'visible',
      cursor: 'pointer',
      // disable touch highlighting on devices
      WebkitTapHighlightColor: "rgba(0,0,0,0)",
      border: 'black solid 2px',
      borderRadius: "8px",
      padding: '8px',
    }


    const shouldReduceMotion = useReducedMotion()
  const closedX1 = shouldReduceMotion ? 0 : "-50vw"
  const closedX2 = shouldReduceMotion ? 0 : "100vw"
  const closedY1 = shouldReduceMotion ? 0 : "150vh"

    return (
      <>
        <div className="fixed top-[45vh] right-[1vw] w-[50px] h-[50px] z-50">
          <svg
            viewBox="0 0 96 96"
            height="100%"
            onClick={this.handleClick.bind(this)}
            style={style}
          >
            <Motion
              style={{
                x: spring(this.state.isToggleOpen ? 1 : 0, presets.wobbly),
                y: spring(this.state.isToggleOpen ? 0 : 1, presets.wobbly),
              }}
            >
              {({ x, y }) =>
                <g
                  id="navicon"
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="14"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  <line
                    transform={`translate(${x * 12}, ${x * -7}) rotate(${x * 45}, 7, 26)`}
                    x1="7" y1="26" x2="89" y2="26"
                  />
                  <line
                    transform={`translate(${x * 12}, ${x * 7}) rotate(${x * -45}, 7, 70)`}
                    x1="7" y1="70" x2="89" y2="70"
                  />
                  <line
                    transform={`translate(${x * -96})`}
                    opacity={y}
                    x1="7" y1="48" x2="89" y2="48"
                  />
                </g>
              }
            </Motion>
          </svg>
        </div>

        <NavMenu isToggleOpen={this.state.isToggleOpen} />
        

      </>
    )
  }
}